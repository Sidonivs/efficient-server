// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.proto

#include "schema.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_schema_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Location;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Reset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OneToAll;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OneToOne;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Walk;
}  // namespace protobuf_schema_2eproto
namespace esw {
namespace server {
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::esw::server::Walk* walk_;
  const ::esw::server::OneToOne* onetoone_;
  const ::esw::server::OneToAll* onetoall_;
  const ::esw::server::Reset* reset_;
} _Request_default_instance_;
class WalkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Walk>
      _instance;
} _Walk_default_instance_;
class OneToOneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneToOne>
      _instance;
} _OneToOne_default_instance_;
class OneToAllDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneToAll>
      _instance;
} _OneToAll_default_instance_;
class ResetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reset>
      _instance;
} _Reset_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location>
      _instance;
} _Location_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace server
}  // namespace esw
namespace protobuf_schema_2eproto {
static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_Request_default_instance_;
    new (ptr) ::esw::server::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRequest}, {
      &protobuf_schema_2eproto::scc_info_Walk.base,
      &protobuf_schema_2eproto::scc_info_OneToOne.base,
      &protobuf_schema_2eproto::scc_info_OneToAll.base,
      &protobuf_schema_2eproto::scc_info_Reset.base,}};

static void InitDefaultsWalk() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_Walk_default_instance_;
    new (ptr) ::esw::server::Walk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::Walk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Walk =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWalk}, {
      &protobuf_schema_2eproto::scc_info_Location.base,}};

static void InitDefaultsOneToOne() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_OneToOne_default_instance_;
    new (ptr) ::esw::server::OneToOne();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::OneToOne::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OneToOne =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOneToOne}, {
      &protobuf_schema_2eproto::scc_info_Location.base,}};

static void InitDefaultsOneToAll() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_OneToAll_default_instance_;
    new (ptr) ::esw::server::OneToAll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::OneToAll::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OneToAll =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOneToAll}, {
      &protobuf_schema_2eproto::scc_info_Location.base,}};

static void InitDefaultsReset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_Reset_default_instance_;
    new (ptr) ::esw::server::Reset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::Reset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Reset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReset}, {}};

static void InitDefaultsLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_Location_default_instance_;
    new (ptr) ::esw::server::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Location =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocation}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::esw::server::_Response_default_instance_;
    new (ptr) ::esw::server::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::esw::server::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Walk.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneToOne.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneToAll.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::esw::server::RequestDefaultTypeInternal, walk_),
  offsetof(::esw::server::RequestDefaultTypeInternal, onetoone_),
  offsetof(::esw::server::RequestDefaultTypeInternal, onetoall_),
  offsetof(::esw::server::RequestDefaultTypeInternal, reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Request, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Walk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Walk, locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Walk, lengths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::OneToOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::OneToOne, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::OneToOne, destination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::OneToAll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::OneToAll, origin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Reset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Location, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Location, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Response, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Response, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Response, shortest_path_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::esw::server::Response, total_length_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::esw::server::Request)},
  { 10, -1, sizeof(::esw::server::Walk)},
  { 17, -1, sizeof(::esw::server::OneToOne)},
  { 24, -1, sizeof(::esw::server::OneToAll)},
  { 30, -1, sizeof(::esw::server::Reset)},
  { 35, -1, sizeof(::esw::server::Location)},
  { 42, -1, sizeof(::esw::server::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_Walk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_OneToOne_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_OneToAll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_Reset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::esw::server::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "schema.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014schema.proto\022\nesw.server\"\252\001\n\007Request\022 "
      "\n\004walk\030\001 \001(\0132\020.esw.server.WalkH\000\022(\n\010oneT"
      "oOne\030\002 \001(\0132\024.esw.server.OneToOneH\000\022(\n\010on"
      "eToAll\030\003 \001(\0132\024.esw.server.OneToAllH\000\022\"\n\005"
      "reset\030\004 \001(\0132\021.esw.server.ResetH\000B\005\n\003msg\""
      "@\n\004Walk\022\'\n\tlocations\030\001 \003(\0132\024.esw.server."
      "Location\022\017\n\007lengths\030\002 \003(\r\"[\n\010OneToOne\022$\n"
      "\006origin\030\001 \001(\0132\024.esw.server.Location\022)\n\013d"
      "estination\030\002 \001(\0132\024.esw.server.Location\"0"
      "\n\010OneToAll\022$\n\006origin\030\001 \001(\0132\024.esw.server."
      "Location\"\007\n\005Reset\" \n\010Location\022\t\n\001x\030\001 \001(\005"
      "\022\t\n\001y\030\002 \001(\005\"\230\001\n\010Response\022+\n\006status\030\001 \001(\016"
      "2\033.esw.server.Response.Status\022\016\n\006errMsg\030"
      "\002 \001(\t\022\034\n\024shortest_path_length\030\003 \001(\004\022\024\n\014t"
      "otal_length\030\004 \001(\004\"\033\n\006Status\022\006\n\002OK\020\000\022\t\n\005E"
      "RROR\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 614);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schema.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_schema_2eproto
namespace esw {
namespace server {
const ::google::protobuf::EnumDescriptor* Response_Status_descriptor() {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2eproto::file_level_enum_descriptors[0];
}
bool Response_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Response_Status Response::OK;
const Response_Status Response::ERROR;
const Response_Status Response::Status_MIN;
const Response_Status Response::Status_MAX;
const int Response::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Request::InitAsDefaultInstance() {
  ::esw::server::_Request_default_instance_.walk_ = const_cast< ::esw::server::Walk*>(
      ::esw::server::Walk::internal_default_instance());
  ::esw::server::_Request_default_instance_.onetoone_ = const_cast< ::esw::server::OneToOne*>(
      ::esw::server::OneToOne::internal_default_instance());
  ::esw::server::_Request_default_instance_.onetoall_ = const_cast< ::esw::server::OneToAll*>(
      ::esw::server::OneToAll::internal_default_instance());
  ::esw::server::_Request_default_instance_.reset_ = const_cast< ::esw::server::Reset*>(
      ::esw::server::Reset::internal_default_instance());
}
void Request::set_allocated_walk(::esw::server::Walk* walk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (walk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      walk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, walk, submessage_arena);
    }
    set_has_walk();
    msg_.walk_ = walk;
  }
  // @@protoc_insertion_point(field_set_allocated:esw.server.Request.walk)
}
void Request::set_allocated_onetoone(::esw::server::OneToOne* onetoone) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (onetoone) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      onetoone = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onetoone, submessage_arena);
    }
    set_has_onetoone();
    msg_.onetoone_ = onetoone;
  }
  // @@protoc_insertion_point(field_set_allocated:esw.server.Request.oneToOne)
}
void Request::set_allocated_onetoall(::esw::server::OneToAll* onetoall) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (onetoall) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      onetoall = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onetoall, submessage_arena);
    }
    set_has_onetoall();
    msg_.onetoall_ = onetoall;
  }
  // @@protoc_insertion_point(field_set_allocated:esw.server.Request.oneToAll)
}
void Request::set_allocated_reset(::esw::server::Reset* reset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    set_has_reset();
    msg_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:esw.server.Request.reset)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kWalkFieldNumber;
const int Request::kOneToOneFieldNumber;
const int Request::kOneToAllFieldNumber;
const int Request::kResetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kWalk: {
      mutable_walk()->::esw::server::Walk::MergeFrom(from.walk());
      break;
    }
    case kOneToOne: {
      mutable_onetoone()->::esw::server::OneToOne::MergeFrom(from.onetoone());
      break;
    }
    case kOneToAll: {
      mutable_onetoall()->::esw::server::OneToAll::MergeFrom(from.onetoall());
      break;
    }
    case kReset: {
      mutable_reset()->::esw::server::Reset::MergeFrom(from.reset());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:esw.server.Request)
}

void Request::SharedCtor() {
  clear_has_msg();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:esw.server.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:esw.server.Request)
  switch (msg_case()) {
    case kWalk: {
      delete msg_.walk_;
      break;
    }
    case kOneToOne: {
      delete msg_.onetoone_;
      break;
    }
    case kOneToAll: {
      delete msg_.onetoall_;
      break;
    }
    case kReset: {
      delete msg_.reset_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .esw.server.Walk walk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_walk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .esw.server.OneToOne oneToOne = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onetoone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .esw.server.OneToAll oneToAll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onetoall()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .esw.server.Reset reset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Walk walk = 1;
  if (has_walk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_walk(), output);
  }

  // .esw.server.OneToOne oneToOne = 2;
  if (has_onetoone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_onetoone(), output);
  }

  // .esw.server.OneToAll oneToAll = 3;
  if (has_onetoall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_onetoall(), output);
  }

  // .esw.server.Reset reset = 4;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_reset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Walk walk = 1;
  if (has_walk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_walk(), deterministic, target);
  }

  // .esw.server.OneToOne oneToOne = 2;
  if (has_onetoone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_onetoone(), deterministic, target);
  }

  // .esw.server.OneToAll oneToAll = 3;
  if (has_onetoall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_onetoall(), deterministic, target);
  }

  // .esw.server.Reset reset = 4;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_reset(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .esw.server.Walk walk = 1;
    case kWalk: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.walk_);
      break;
    }
    // .esw.server.OneToOne oneToOne = 2;
    case kOneToOne: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.onetoone_);
      break;
    }
    // .esw.server.OneToAll oneToAll = 3;
    case kOneToAll: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.onetoall_);
      break;
    }
    // .esw.server.Reset reset = 4;
    case kReset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.reset_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kWalk: {
      mutable_walk()->::esw::server::Walk::MergeFrom(from.walk());
      break;
    }
    case kOneToOne: {
      mutable_onetoone()->::esw::server::OneToOne::MergeFrom(from.onetoone());
      break;
    }
    case kOneToAll: {
      mutable_onetoall()->::esw::server::OneToAll::MergeFrom(from.onetoall());
      break;
    }
    case kReset: {
      mutable_reset()->::esw::server::Reset::MergeFrom(from.reset());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Walk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Walk::kLocationsFieldNumber;
const int Walk::kLengthsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Walk::Walk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_Walk.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.Walk)
}
Walk::Walk(const Walk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locations_(from.locations_),
      lengths_(from.lengths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:esw.server.Walk)
}

void Walk::SharedCtor() {
}

Walk::~Walk() {
  // @@protoc_insertion_point(destructor:esw.server.Walk)
  SharedDtor();
}

void Walk::SharedDtor() {
}

void Walk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Walk::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Walk& Walk::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_Walk.base);
  return *internal_default_instance();
}


void Walk::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.Walk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  lengths_.Clear();
  _internal_metadata_.Clear();
}

bool Walk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.Walk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .esw.server.Location locations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lengths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lengths())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_lengths())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.Walk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.Walk)
  return false;
#undef DO_
}

void Walk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.Walk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .esw.server.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locations(static_cast<int>(i)),
      output);
  }

  // repeated uint32 lengths = 2;
  if (this->lengths_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lengths_cached_byte_size_));
  }
  for (int i = 0, n = this->lengths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lengths(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.Walk)
}

::google::protobuf::uint8* Walk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.Walk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .esw.server.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locations(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 lengths = 2;
  if (this->lengths_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lengths_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lengths_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.Walk)
  return target;
}

size_t Walk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.Walk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .esw.server.Location locations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // repeated uint32 lengths = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lengths_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lengths_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Walk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.Walk)
  GOOGLE_DCHECK_NE(&from, this);
  const Walk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Walk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.Walk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.Walk)
    MergeFrom(*source);
  }
}

void Walk::MergeFrom(const Walk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.Walk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  lengths_.MergeFrom(from.lengths_);
}

void Walk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.Walk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Walk::CopyFrom(const Walk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.Walk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Walk::IsInitialized() const {
  return true;
}

void Walk::Swap(Walk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Walk::InternalSwap(Walk* other) {
  using std::swap;
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
  lengths_.InternalSwap(&other->lengths_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Walk::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneToOne::InitAsDefaultInstance() {
  ::esw::server::_OneToOne_default_instance_._instance.get_mutable()->origin_ = const_cast< ::esw::server::Location*>(
      ::esw::server::Location::internal_default_instance());
  ::esw::server::_OneToOne_default_instance_._instance.get_mutable()->destination_ = const_cast< ::esw::server::Location*>(
      ::esw::server::Location::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneToOne::kOriginFieldNumber;
const int OneToOne::kDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneToOne::OneToOne()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_OneToOne.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.OneToOne)
}
OneToOne::OneToOne(const OneToOne& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::esw::server::Location(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_destination()) {
    destination_ = new ::esw::server::Location(*from.destination_);
  } else {
    destination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:esw.server.OneToOne)
}

void OneToOne::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(destination_));
}

OneToOne::~OneToOne() {
  // @@protoc_insertion_point(destructor:esw.server.OneToOne)
  SharedDtor();
}

void OneToOne::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete destination_;
}

void OneToOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneToOne::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneToOne& OneToOne::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_OneToOne.base);
  return *internal_default_instance();
}


void OneToOne::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.OneToOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) {
    delete destination_;
  }
  destination_ = NULL;
  _internal_metadata_.Clear();
}

bool OneToOne::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.OneToOne)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .esw.server.Location origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .esw.server.Location destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.OneToOne)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.OneToOne)
  return false;
#undef DO_
}

void OneToOne::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.OneToOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // .esw.server.Location destination = 2;
  if (this->has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_destination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.OneToOne)
}

::google::protobuf::uint8* OneToOne::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.OneToOne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // .esw.server.Location destination = 2;
  if (this->has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_destination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.OneToOne)
  return target;
}

size_t OneToOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.OneToOne)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  // .esw.server.Location destination = 2;
  if (this->has_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneToOne::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.OneToOne)
  GOOGLE_DCHECK_NE(&from, this);
  const OneToOne* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneToOne>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.OneToOne)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.OneToOne)
    MergeFrom(*source);
  }
}

void OneToOne::MergeFrom(const OneToOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.OneToOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_origin()) {
    mutable_origin()->::esw::server::Location::MergeFrom(from.origin());
  }
  if (from.has_destination()) {
    mutable_destination()->::esw::server::Location::MergeFrom(from.destination());
  }
}

void OneToOne::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.OneToOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneToOne::CopyFrom(const OneToOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.OneToOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneToOne::IsInitialized() const {
  return true;
}

void OneToOne::Swap(OneToOne* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneToOne::InternalSwap(OneToOne* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(destination_, other->destination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneToOne::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneToAll::InitAsDefaultInstance() {
  ::esw::server::_OneToAll_default_instance_._instance.get_mutable()->origin_ = const_cast< ::esw::server::Location*>(
      ::esw::server::Location::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneToAll::kOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneToAll::OneToAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_OneToAll.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.OneToAll)
}
OneToAll::OneToAll(const OneToAll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::esw::server::Location(*from.origin_);
  } else {
    origin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:esw.server.OneToAll)
}

void OneToAll::SharedCtor() {
  origin_ = NULL;
}

OneToAll::~OneToAll() {
  // @@protoc_insertion_point(destructor:esw.server.OneToAll)
  SharedDtor();
}

void OneToAll::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
}

void OneToAll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneToAll::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneToAll& OneToAll::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_OneToAll.base);
  return *internal_default_instance();
}


void OneToAll::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.OneToAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
  _internal_metadata_.Clear();
}

bool OneToAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.OneToAll)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .esw.server.Location origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.OneToAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.OneToAll)
  return false;
#undef DO_
}

void OneToAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.OneToAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.OneToAll)
}

::google::protobuf::uint8* OneToAll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.OneToAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.OneToAll)
  return target;
}

size_t OneToAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.OneToAll)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .esw.server.Location origin = 1;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneToAll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.OneToAll)
  GOOGLE_DCHECK_NE(&from, this);
  const OneToAll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneToAll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.OneToAll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.OneToAll)
    MergeFrom(*source);
  }
}

void OneToAll::MergeFrom(const OneToAll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.OneToAll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_origin()) {
    mutable_origin()->::esw::server::Location::MergeFrom(from.origin());
  }
}

void OneToAll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.OneToAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneToAll::CopyFrom(const OneToAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.OneToAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneToAll::IsInitialized() const {
  return true;
}

void OneToAll::Swap(OneToAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneToAll::InternalSwap(OneToAll* other) {
  using std::swap;
  swap(origin_, other->origin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneToAll::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reset::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reset::Reset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_Reset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.Reset)
}
Reset::Reset(const Reset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:esw.server.Reset)
}

void Reset::SharedCtor() {
}

Reset::~Reset() {
  // @@protoc_insertion_point(destructor:esw.server.Reset)
  SharedDtor();
}

void Reset::SharedDtor() {
}

void Reset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reset::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reset& Reset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_Reset.base);
  return *internal_default_instance();
}


void Reset::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Reset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.Reset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.Reset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.Reset)
  return false;
#undef DO_
}

void Reset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.Reset)
}

::google::protobuf::uint8* Reset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.Reset)
  return target;
}

size_t Reset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.Reset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  const Reset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.Reset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.Reset)
    MergeFrom(*source);
  }
}

void Reset::MergeFrom(const Reset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Reset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reset::CopyFrom(const Reset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reset::IsInitialized() const {
  return true;
}

void Reset::Swap(Reset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reset::InternalSwap(Reset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reset::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kXFieldNumber;
const int Location::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_Location.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:esw.server.Location)
}

void Location::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:esw.server.Location)
  SharedDtor();
}

void Location::SharedDtor() {
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_Location.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.Location)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kStatusFieldNumber;
const int Response::kErrMsgFieldNumber;
const int Response::kShortestPathLengthFieldNumber;
const int Response::kTotalLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_schema_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:esw.server.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&shortest_path_length_, &from.shortest_path_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&shortest_path_length_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:esw.server.Response)
}

void Response::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shortest_path_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&shortest_path_length_)) + sizeof(status_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:esw.server.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_schema_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.server.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shortest_path_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&shortest_path_length_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esw.server.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .esw.server.Response.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::esw::server::Response_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "esw.server.Response.errMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 shortest_path_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shortest_path_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esw.server.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esw.server.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esw.server.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Response.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string errMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esw.server.Response.errMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // uint64 shortest_path_length = 3;
  if (this->shortest_path_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->shortest_path_length(), output);
  }

  // uint64 total_length = 4;
  if (this->total_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->total_length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esw.server.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esw.server.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .esw.server.Response.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string errMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esw.server.Response.errMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // uint64 shortest_path_length = 3;
  if (this->shortest_path_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->shortest_path_length(), target);
  }

  // uint64 total_length = 4;
  if (this->total_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->total_length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.server.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.server.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // uint64 shortest_path_length = 3;
  if (this->shortest_path_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shortest_path_length());
  }

  // uint64 total_length = 4;
  if (this->total_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_length());
  }

  // .esw.server.Response.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esw.server.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esw.server.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esw.server.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esw.server.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.shortest_path_length() != 0) {
    set_shortest_path_length(from.shortest_path_length());
  }
  if (from.total_length() != 0) {
    set_total_length(from.total_length());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esw.server.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.server.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shortest_path_length_, other->shortest_path_length_);
  swap(total_length_, other->total_length_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_schema_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schema_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace esw
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::Request* Arena::CreateMaybeMessage< ::esw::server::Request >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::Walk* Arena::CreateMaybeMessage< ::esw::server::Walk >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::Walk >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::OneToOne* Arena::CreateMaybeMessage< ::esw::server::OneToOne >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::OneToOne >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::OneToAll* Arena::CreateMaybeMessage< ::esw::server::OneToAll >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::OneToAll >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::Reset* Arena::CreateMaybeMessage< ::esw::server::Reset >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::Reset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::Location* Arena::CreateMaybeMessage< ::esw::server::Location >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::Location >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::esw::server::Response* Arena::CreateMaybeMessage< ::esw::server::Response >(Arena* arena) {
  return Arena::CreateInternal< ::esw::server::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
